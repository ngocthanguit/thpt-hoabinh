<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">

	

	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

	<http pattern="/resources/**" security="none"/>

	<http>
		<!-- only admin access -->
		<intercept-url pattern="/" access="hasAuthority('ADMIN')" />
		<intercept-url pattern="/manage/**" access="hasAuthority('ADMIN')" />
		<!-- only user access (who is registered) -->
		<intercept-url pattern="/cart/**" access="hasAuthority('USER')" />
		<!-- rest of the world -->			
		<intercept-url pattern="/**" access="permitAll" />
		<form-login login-page="/login" />
		<access-denied-handler error-page="/access-denied"/>
	</http>
	
	<!-- authentication-manager>
		<authentication-provider>
 			<password-encoder ref="passwordEncoder" />
 			<jdbc-user-service data-source-ref="dataSource"
 				authorities-by-username-query="select Username, Role from UserDetail where Username = ?"
 				users-by-username-query="select Username, Password, Active from UserDetail where Username = ?"
 			/>
 		</authentication-provider>
	</authentication-manager> -->
<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="jimi" password="jimispassword" authorities="ROLE_USER, ROLE_ADMIN" />
				<user name="bob" password="bobspassword" authorities="ROLE_USER" />
			</user-service>
		</authentication-provider>
	</authentication-manager>


</beans:beans>